{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Personal Project\\\\FetchMovies\\\\01-starting-project\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n  const [movies, fetchMovies] = useState([]);\n  const [loader, isLoading] = useState(false);\n  const [error, isError] = useState(null);\n\n  async function fetchMovieHandler() {\n    isLoading(true);\n    isError(null);\n\n    try {\n      const response = await fetch(\"https://swapi.dev/api/film/\");\n\n      if (!response.ok) {\n        throw new Error(\"Something Went Wrong... Retrying\");\n      }\n\n      const data = await response.json();\n      const tranformMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      fetchMovies(tranformMovies);\n    } catch (error) {\n      isError(error.message);\n      setInterval(fetchMovieHandler, 5000);\n    }\n\n    isLoading(false); // const data = await response.json()\n    //     const tranformMovies = data.results.map((movieData)=>{\n    //       return {\n    //         id: movieData.episode_id,\n    //         title: movieData.title,\n    //         openingText: movieData.opening_crawl,\n    //         releaseDate: movieData.release_date\n    //       }\n    //   });\n    //   fetchMovies(tranformMovies)\n    //   isLoading(false)\n  }\n\n  const stopInterval = () => {\n    clearInterval(fetchMovieHandler);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: stopInterval,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Stop Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, !loader && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }), loader && !error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 30\n    }\n  }, \"Loading... Please Wait..\"), !loader && error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 30\n    }\n  }, error)));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","MoviesList","App","movies","fetchMovies","loader","isLoading","error","isError","fetchMovieHandler","response","fetch","ok","Error","data","json","tranformMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","setInterval","stopInterval","clearInterval"],"sources":["C:/Users/hp/Desktop/Personal Project/FetchMovies/01-starting-project/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n  const [movies, fetchMovies] = useState([]);\n  const [loader, isLoading] = useState(false);\n  const [error, isError] = useState(null);\n  async function fetchMovieHandler() {\n    isLoading(true);\n    isError(null)\n\n    try {\n      const response = await fetch(\"https://swapi.dev/api/film/\");\n      if (!response.ok) {\n        throw new Error(\"Something Went Wrong... Retrying\");\n      }\n      const data = await response.json();\n      const tranformMovies = data.results.map((movieData) => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date,\n        };\n      });\n      fetchMovies(tranformMovies);\n    } catch(error) {\n      isError(error.message)\n\n      setInterval(fetchMovieHandler, 5000);\n    }\n    isLoading(false);\n\n\n    // const data = await response.json()\n\n    //     const tranformMovies = data.results.map((movieData)=>{\n    //       return {\n    //         id: movieData.episode_id,\n    //         title: movieData.title,\n    //         openingText: movieData.opening_crawl,\n    //         releaseDate: movieData.release_date\n    //       }\n    //   });\n    //   fetchMovies(tranformMovies)\n    //   isLoading(false)\n  }\n  const stopInterval = () => {\n    clearInterval(fetchMovieHandler);\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n        <button onClick={stopInterval}>Stop Movies</button>\n\n      </section>\n      <section>\n        {!loader && <MoviesList movies={movies} />}\n        {loader && !error && <p>Loading... Please Wait..</p>}\n        {!loader && error && <p>{error}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,MAAD,EAASC,WAAT,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;EACA,MAAM,CAACO,KAAD,EAAQC,OAAR,IAAmBR,QAAQ,CAAC,IAAD,CAAjC;;EACA,eAAeS,iBAAf,GAAmC;IACjCH,SAAS,CAAC,IAAD,CAAT;IACAE,OAAO,CAAC,IAAD,CAAP;;IAEA,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;;MACA,IAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN;MACD;;MACD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;MACA,MAAMC,cAAc,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;QACrD,OAAO;UACLC,EAAE,EAAED,SAAS,CAACE,UADT;UAELC,KAAK,EAAEH,SAAS,CAACG,KAFZ;UAGLC,WAAW,EAAEJ,SAAS,CAACK,aAHlB;UAILC,WAAW,EAAEN,SAAS,CAACO;QAJlB,CAAP;MAMD,CAPsB,CAAvB;MAQAtB,WAAW,CAACY,cAAD,CAAX;IACD,CAfD,CAeE,OAAMT,KAAN,EAAa;MACbC,OAAO,CAACD,KAAK,CAACoB,OAAP,CAAP;MAEAC,WAAW,CAACnB,iBAAD,EAAoB,IAApB,CAAX;IACD;;IACDH,SAAS,CAAC,KAAD,CAAT,CAxBiC,CA2BjC;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD;;EACD,MAAMuB,YAAY,GAAG,MAAM;IACzBC,aAAa,CAACrB,iBAAD,CAAb;EACD,CAFD;;EAIA,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,OAAO,EAAEA,iBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADF,eAEE;IAAQ,OAAO,EAAEoB,YAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBAFF,CADF,eAME;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,CAACxB,MAAD,iBAAW,oBAAC,UAAD;IAAY,MAAM,EAAEF,MAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADd,EAEGE,MAAM,IAAI,CAACE,KAAX,iBAAoB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,8BAFvB,EAGG,CAACF,MAAD,IAAWE,KAAX,iBAAoB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIA,KAAJ,CAHvB,CANF,CADF;AAcD;;AAED,eAAeL,GAAf"},"metadata":{},"sourceType":"module"}